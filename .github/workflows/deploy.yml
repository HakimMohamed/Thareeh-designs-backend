name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Archive build output
        run: tar -czf build.tar.gz dist

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Prepare SSH for connecting to EC2 instance
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_ELASTIC_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_ELASTIC_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # SSH into EC2 and create directory if not exists
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << 'EOF'
            mkdir -p /home/ubuntu/thareeh-designs-backend
          EOF

          # Upload build files to EC2
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa build.tar.gz $EC2_USER@$EC2_HOST:/home/ubuntu/thareeh-designs-backend

          # SSH into EC2 and deploy the application
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/ubuntu/thareeh-designs-backend

            # Extract the build files
            tar -xzf build.tar.gz

            # Install production dependencies (skip dev dependencies)
            npm install

            # Ensure the .env file is not overwritten by GitHub Actions
            if [ -f .env ]; then
              cp .env .env.bak
            fi

            # Restart the application (using PM2 or your preferred process manager)
            pm2 restart app || pm2 start app.js  # Adjust if using a different process manager or script
          EOF
